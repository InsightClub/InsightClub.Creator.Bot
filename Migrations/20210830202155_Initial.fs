// <auto-generated />
namespace InsightClub.Creator.Bot.Migrations

open System
open InsightClub.Creator.Bot
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Migrations
open Npgsql.EntityFrameworkCore.PostgreSQL.Metadata

[<DbContext(typeof<Context>)>]
[<Migration("20210830202155_Initial")>]
type internal Initial() =
  inherit Migration()

  override this.Up(migrationBuilder: MigrationBuilder) =
    migrationBuilder.CreateTable(
      name = "Creators",
      columns =
        (fun table ->
          {| CreatorId =
               table
                 .Column<int>(nullable = false, ``type`` = "integer")
                 .Annotation(
                   "Npgsql:ValueGenerationStrategy",
                   NpgsqlValueGenerationStrategy.IdentityByDefaultColumn
                 )
             TelegramId =
               table.Column<Int64>(nullable = false, ``type`` = "bigint")
             BotState =
               table.Column<Core.BotState>(nullable = false, ``type`` = "jsonb") |}),
      constraints =
        (fun table ->
          table.PrimaryKey("PK_Creators", (fun x -> (x.CreatorId) :> obj))
          |> ignore)
    )
    |> ignore

    migrationBuilder.CreateTable(
      name = "Courses",
      columns =
        (fun table ->
          {| CourseId =
               table
                 .Column<int>(nullable = false, ``type`` = "integer")
                 .Annotation(
                   "Npgsql:ValueGenerationStrategy",
                   NpgsqlValueGenerationStrategy.IdentityByDefaultColumn
                 )
             CreatorId =
               table.Column<int>(nullable = false, ``type`` = "integer")
             CourseName =
               table.Column<string>(
                 nullable = false,
                 ``type`` = "text",
                 unicode = Nullable(true)
               )
             CourseDescription =
               table.Column<string>(
                 nullable = false,
                 ``type`` = "text",
                 unicode = Nullable(true)
               ) |}),
      constraints =
        (fun table ->
          table.PrimaryKey("PK_Courses", (fun x -> (x.CourseId) :> obj))
          |> ignore

          table.ForeignKey(
            name = "FK_Courses_Creators_CreatorId",
            column = (fun x -> (x.CreatorId) :> obj),
            principalTable = "Creators",
            principalColumn = "CreatorId",
            onDelete = ReferentialAction.Cascade
          )
          |> ignore

          )
    )
    |> ignore

    migrationBuilder.CreateTable(
      name = "Blocks",
      columns =
        (fun table ->
          {| CourseId =
               table.Column<int>(nullable = false, ``type`` = "integer")
             BlockIndex =
               table.Column<int>(nullable = false, ``type`` = "integer")
             BlockType =
               table.Column<string>(nullable = false, ``type`` = "text")
             Content =
               table.Column<string>(
                 nullable = false,
                 ``type`` = "text",
                 unicode = Nullable(true)
               ) |}),
      constraints =
        (fun table ->
          table.PrimaryKey(
            "PK_Blocks",
            (fun x -> (x.CourseId, x.BlockIndex) :> obj)
          )
          |> ignore

          table.ForeignKey(
            name = "FK_Blocks_Courses_CourseId",
            column = (fun x -> (x.CourseId) :> obj),
            principalTable = "Courses",
            principalColumn = "CourseId",
            onDelete = ReferentialAction.Cascade
          )
          |> ignore

          )
    )
    |> ignore

    migrationBuilder.CreateIndex(
      name = "IX_Courses_CreatorId_CourseName",
      table = "Courses",
      columns = [| "CreatorId"; "CourseName" |],
      unique = true
    )
    |> ignore

    migrationBuilder.CreateIndex(
      name = "IX_Creators_TelegramId",
      table = "Creators",
      column = "TelegramId",
      unique = true
    )
    |> ignore


  override this.Down(migrationBuilder: MigrationBuilder) =
    migrationBuilder.DropTable(name = "Blocks")
    |> ignore

    migrationBuilder.DropTable(name = "Courses")
    |> ignore

    migrationBuilder.DropTable(name = "Creators")
    |> ignore


  override this.BuildTargetModel(modelBuilder: ModelBuilder) =
    modelBuilder

      .UseIdentityByDefaultColumns()
      .HasAnnotation("Relational:MaxIdentifierLength", 63)
      .HasAnnotation("ProductVersion", "5.0.9")
    |> ignore

    modelBuilder.Entity(
      "InsightClub.Creator.Bot.Model+Block",
      (fun b ->

        b
          .Property<int>("CourseId")
          .IsRequired(true)
          .HasColumnType("integer")
        |> ignore

        b
          .Property<int>("BlockIndex")
          .IsRequired(true)
          .HasColumnType("integer")
        |> ignore

        b
          .Property<string>("BlockType")
          .IsRequired(true)
          .HasColumnType("text")
        |> ignore

        b
          .Property<string>("Content")
          .IsRequired(true)
          .IsUnicode(true)
          .HasColumnType("text")
        |> ignore

        b.HasKey("CourseId", "BlockIndex") |> ignore

        b.ToTable("Blocks") |> ignore

        )
    )
    |> ignore

    modelBuilder.Entity(
      "InsightClub.Creator.Bot.Model+Course",
      (fun b ->

        b
          .Property<int>("CourseId")
          .IsRequired(true)
          .ValueGeneratedOnAdd()
          .HasColumnType("integer")
          .UseIdentityByDefaultColumn()
        |> ignore

        b
          .Property<string>("CourseDescription")
          .IsRequired(true)
          .IsUnicode(true)
          .HasColumnType("text")
        |> ignore

        b
          .Property<string>("CourseName")
          .IsRequired(true)
          .IsUnicode(true)
          .HasColumnType("text")
        |> ignore

        b
          .Property<int>("CreatorId")
          .IsRequired(true)
          .HasColumnType("integer")
        |> ignore

        b.HasKey("CourseId") |> ignore


        b.HasIndex("CreatorId", "CourseName").IsUnique()
        |> ignore

        b.ToTable("Courses") |> ignore

        )
    )
    |> ignore

    modelBuilder.Entity(
      "InsightClub.Creator.Bot.Model+Creator",
      (fun b ->

        b
          .Property<int>("CreatorId")
          .IsRequired(true)
          .ValueGeneratedOnAdd()
          .HasColumnType("integer")
          .UseIdentityByDefaultColumn()
        |> ignore

        b
          .Property<Core.BotState>("BotState")
          .IsRequired(true)
          .HasColumnType("jsonb")
        |> ignore

        b
          .Property<Int64>("TelegramId")
          .IsRequired(true)
          .HasColumnType("bigint")
        |> ignore

        b.HasKey("CreatorId") |> ignore


        b.HasIndex("TelegramId").IsUnique() |> ignore

        b.ToTable("Creators") |> ignore

        )
    )
    |> ignore

    modelBuilder.Entity(
      "InsightClub.Creator.Bot.Model+Block",
      (fun b ->
        b
          .HasOne("InsightClub.Creator.Bot.Model+Course", null)
          .WithMany()
          .HasForeignKey("CourseId")
          .OnDelete(DeleteBehavior.Cascade)
          .IsRequired()
        |> ignore)
    )
    |> ignore

    modelBuilder.Entity(
      "InsightClub.Creator.Bot.Model+Course",
      (fun b ->
        b
          .HasOne("InsightClub.Creator.Bot.Model+Creator", null)
          .WithMany()
          .HasForeignKey("CreatorId")
          .OnDelete(DeleteBehavior.Cascade)
          .IsRequired()
        |> ignore)
    )
    |> ignore
