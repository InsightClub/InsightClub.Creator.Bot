module InsightClub.Creator.Bot.Message

open System.Text.RegularExpressions


// Clean
let c s = Regex("\n[ ]+").Replace(s, "\n")
let f = sprintf

// Line
let ln = "\n"
let doubleLn = ln + ln

// Commands avaiable
let commandsAvaiable = "Доступные действия:"

let help message commands =
  String.concat ""
    [ message
      doubleLn
      commandsAvaiable
      doubleLn
      commands ]

let unsupported = help "Неизвестная команда."

let cancel = "Создание курса отменено."

module Inactive =
  let greet firstName lastNameOption =
    let lastName =
      lastNameOption
      |> Option.map ((+) " ")
      |> Option.defaultValue ""

    f "Добро пожаловать в InsightClub.Creator.Bot, %s%s! \
      С помощью этого бота Вы можете конструировать свои курсы!

      Отправьте /help для получения помощи." firstName lastName
    |> c

module Idle =
  let help =
    c "Этот бот позволяет пошагово создавать свои курсы в Телеграм.

      Каждый шаг работы задокументирован и доступен по команде /help. \
      Вызывайте эту команду, когда не знаете, что делать или не помните \
      на каком шаге остановились.

      На данный момент бот ожидает от Вас начала работы."

  let commands =
    c "/help — Получить помощь
       /new — Начать создавать курс"

  let newCourse = "Создаём новый курс. Пришлите имя будущего курса."

module PendingName =
  let help = "Ожидается название будущего курса."

  let commands =
    c "Произвольный текст — Задать имя курса
      /help — Получить помощь
      /cancel — Отменить создание курса"

  let reserved =
    "У Вас уже есть курс с таким названием. Пришлите \
    новое уникальное название."

  let set =
    "Название курса задано. Теперь пришлите описание курса или /skip, \
    чтоб пропустить этот шаг."

module PendingDesc =
  let help =
    "Ожидается описание будущего курса. Этот шаг можно пропустить."

  let commands =
    c "Произвольный текст — Задать описание курса
      /help — Получить помощь
      /undo — Вернуться к шагу с заданием имени курса
      /skip — Пропустить задание описания
      /cancel — Отменить создание курса"

  let undo =
    "Название курса сброшено. Введите новое уникальное название курса."

  let next =
    "Переходим непосредственно к контенту. На данном этапе требуется \
    последовательно ввести желаемое количество контента. Каждое следующее \
    текстовое (кроме команд) или голосовое сообщение будет рассмотрено как \
    информационный блок курса."

  let skip =
    c $"Описание пропущено.

      {next}"


  let set =
    c $"Описание курса задано.

      {next}"

module PendingData =
  let help = "Ожидаю текстовое или голосове сообщение."

  let commands =
    c "Произвольный текст — Добавить текстовый блок в курс
      Голосовое сообщение — Добавить голосовой блок в курс
      /help — Получить помощь
      /undo — Отменить последний шаг
      /cancel — Отменить создание курса
      /finish — Завершить создание курса и сохранить данные"

  let undoEmpty =
    "Описание курса сброшено. Введите новое описание курса."

  let undo =
    f "Блок номер %i сброшен."

  let textSet =
    f "Добавлен текстовый блок. Общее число блоков в курсе %i"

  let voiceSet =
    f "Добавлен голосовой блок. Общее число блоков в курсе %i"

  let finish =
    "Курс успешно сохранён!"
